{
  "openapi": "3.0.0",
  "info": {
    "title": "Product Catalog API",
    "version": "1.0.0",
    "description": "This RESTful API is built using Node.js, Express, and MongoDB (via Mongoose). It allows you to manage products, categories, variants, and inventory for an e-commerce catalog."
  },
  "tags": [
    { "name": "Products", "description": "Manage products" },
    { "name": "Categories", "description": "Manage categories" }
  ],
  "paths": {
    "/api/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "responses": {
          "200": {
            "description": "A list of products",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Product" } }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Create a product",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Product" }
            }
          }
        },
        "responses": {
          "201": { "description": "Product created successfully" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Product found" },
          "404": { "description": "Product not found" }
        }
      },
      "put": {
        "tags": ["Products"],
        "summary": "Update a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Product" }
            }
          }
        },
        "responses": {
          "200": { "description": "Product updated" },
          "400": { "description": "Invalid input" },
          "404": { "description": "Product not found" }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "Product deleted successfully" },
          "404": { "description": "Product not found" }
        }
      }
    },
    "/api/categories": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get all categories",
        "responses": {
          "200": {
            "description": "List of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Category" }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Categories"],
        "summary": "Create a new category",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Category" }
            }
          }
        },
        "responses": {
          "201": { "description": "Category created" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/api/categories/{id}": {
      "delete": {
        "tags": ["Categories"],
        "summary": "Delete a category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID of the category to delete"
          }
        ],
        "responses": {
          "204": { "description": "Category deleted successfully" },
          "404": { "description": "Category not found" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Variant": {
        "type": "object",
        "properties": {
          "color": { "type": "string" },
          "size": { "type": "string" }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "price": { "type": "number" },
          "category": { "type": "string", "description": "Name or ID of the category" },
          "instock": { "type": "boolean" },
          "discount": { "type": "number" },
          "inventory": { "type": "number" },
          "variants": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Variant" }
          }
        },
        "required": ["name", "price", "category", "instock"]
      },
      "Category": {
        "type": "object",
        "properties": {
          "name": { "type": "string" }
        },
        "required": ["name"]
      }
    }
  }
}
